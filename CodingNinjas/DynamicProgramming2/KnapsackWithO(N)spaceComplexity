#include<bits/stdc++.h>
using namespace std;
#include "Solution.h"

int main(){

  int n; 
  cin >> n;
  int* weights = new int[n];
  int* values = new int[n];

  for(int i = 0; i < n; i++){
    cin >> weights[i];
  }

  for(int i = 0; i < n; i++){
    cin >> values[i];
  }

  int maxWeight;
  cin >> maxWeight;

  cout << knapsack(weights, values, n, maxWeight);

}

int knapsack(int* w, int* values, int n, int W){

  /* Don't write main().
   *  Don't read input, it is passed as function argument.
   *  Return output and don't print it.
   *  Taking input and printing output is handled automatically.
  */
   int dp[W+1] = {0};
   for(int i = 0; i<n; i++){
       for(int j = W; j>=w[i]; j--){
           dp[j] = max(dp[j], values[i] + dp[j - w[i]]);
       }
   }
   return dp[W];
}
